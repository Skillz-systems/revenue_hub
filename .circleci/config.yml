version: 2.1

jobs:
  deploy-frontend-staging:
    docker:
      - image: circleci/node:16
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:XM+2xRjrCCSH/Frn3FMhEbTaB4RS9hNa9Wm54+iINww"
      - checkout
      # install dependencies
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: Run npm
          command: |
            cd Frontend && npm install

      - run: CI=false sudo apt update
      - run: CI=false sudo apt-get install rsync
      - run:
          name: rename .env.example file to .env 
          command: |
            cd Frontend &&  mv .env.example .env
      - run:
          name: find and replace in document
          command: |
            cd Frontend && sed -i -e 's|VITE_API_URL=url|VITE_API_URL=https://api.revenuehub.skillzserver.com|g' .env
      - run:
          name: Update known hosts
          command: ssh-keyscan -H 103.72.76.68 >> ~/.ssh/known_hosts && cat ~/.ssh/known_hosts
      - run:
          name: build file
          command: |
            cd Frontend && CI=false npm run build

      - run:
          name: ssh login
          command: |
            rsync -va -e 'ssh -p 7822 -o StrictHostKeyChecking=no'  --delete   Frontend/dist/ Frontend/.htaccess  skillz@103.72.76.68:revenuehub/frontend
      # - run:
      #     name: ssh and run migration on live server
      #     command: |
      #       ssh bartumen@192.254.235.94 && cd devapi.bartumenergy.com &&  php artisan migrate && ls && exit
  deploy-hub-production:
    docker:
      - image: circleci/node:16
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:XM+2xRjrCCSH/Frn3FMhEbTaB4RS9hNa9Wm54+iINww"
      - checkout
      # install dependencies
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: Run npm
          command: |
            npm install

      - run: CI=false sudo apt update
      - run: CI=false sudo apt-get install rsync

      - run:
          name: Update known hosts
          command: ssh-keyscan -H 94.72.98.194 >> ~/.ssh/known_hosts && cat ~/.ssh/known_hosts
      - run:
          name: rename .env.sample file to .env
          command: |
            mv .env.sample .env

      - run:
          name: find and replace in document
          command: |
            sed -i -e 's:REACT_APP_BACKEND_API="sample":REACT_APP_BACKEND_API="${REACT_APP_BACKEND_API}":g' .env && sed -i -e 's:REACT_APP_SHARE_LINK="sample":REACT_APP_DOCUMENTS="${REACT_APP_SHARE_LINK}":g' .env
      - run:
          name: build file
          command: |
            CI=false npm run build

      - run:
          name: ssh login
          command: |
            rsync -va -e 'ssh  -o StrictHostKeyChecking=no'  --delete   build/  hubeei@94.72.98.194:public_html/hub
  deploy-backend-test:
    docker:
      - image: cimg/php:8.3
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:XM+2xRjrCCSH/Frn3FMhEbTaB4RS9hNa9Wm54+iINww"
      - checkout
      # install dependencies
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: rename .env.example file to .env
          command: |
            mv Backend/.env.example Backend/.env

      - run:
          name: Install dependencies
          command: cd Backend && CI=false composer clear-cache && CI=false  composer install &&  CI=false php artisan key:generate
      - run:
          name: run test
          command: cd Backend && php artisan test && php artisan l5-swagger:generate

  deploy-backend-staging:
    docker:
      - image: cimg/php:8.3
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:XM+2xRjrCCSH/Frn3FMhEbTaB4RS9hNa9Wm54+iINww"
      - checkout
      # install dependencies
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: rename .env.example file to .env
          command: |
            mv Backend/.env.example Backend/.env

      - run:
          name: Install dependencies
          command: cd Backend && CI=false composer clear-cache && CI=false  composer install &&  CI=false php artisan key:generate

      - run: sudo apt update
      - run: sudo apt-get install rsync
      - run:
          name: test environment variable for MAILERSEND_API_KEY
          command: |
            echo ${MAILERSEND_API_KEY}
      - run:
          name: test environment variable for MAILERSEND_API_KEY second
          command: |
            echo $MAILERSEND_API_KEY

      # - run:
      #     name: Update known hosts
      #     command:  CI=false ssh-keyscan -H 103.72.76.68 >> ~/.ssh/known_hosts && cat ~/.ssh/known_hosts
      - run:
          name: find and replace in document
          command: |
            sed -i -e 's:/public/index.php:/index.php:g' Backend/public/index.php
            sed -i -e 's:/../vendor/autoload.php:/vendor/autoload.php:g' Backend/public/index.php
            sed -i -e 's:DB_DATABASE=forge:DB_DATABASE=skillz_revenuehub:g' Backend/.env
            sed -i -e 's:DB_USERNAME=forge:DB_USERNAME=skillz_revenuehub:g' Backend/.env
            sed -i -e 's:/../bootstrap/app.php:/bootstrap/app.php:g' Backend/public/index.php
            sed -i -e 's:DB_PASSWORD=forge:DB_PASSWORD="Ubuxa##99":g' Backend/.env
            sed -i -e "s:BVN=forge:BVN=${BVN}:g" Backend/.env
            sed -i -e "s:PUBLIC_KEY=forge:PUBLIC_KEY=${PUBLIC_KEY}:g" Backend/.env
            sed -i -e "s:SECRET_KEY=forge:SECRET_KEY=${SECRET_KEY}:g" Backend/.env
            sed -i -e "s:ENCRYPTION_KEY=forge:ENCRYPTION_KEY=${ENCRYPTION_KEY}:g" Backend/.env
            sed -i -e "s:MAILERSEND_API_KEY=forge:MAILERSEND_API_KEY=${MAILERSEND_API_KEY}:g" Backend/.env
            sed -i -e 's:MAIL_USERNAME=forge:MAIL_USERNAME="${MAIL_USERNAME_STAGE}":g' Backend/.env
            sed -i -e 's:MAIL_PASSWORD=forge:MAIL_PASSWORD="${MAIL_PASSWORD_STAGE}":g' Backend/.env
            sed -i -e "s:MAIL_HOST=forge:MAIL_HOST=${MAIL_HOST_STAGE}:g" Backend/.env
            sed -i -e 's:NIBSS_EMAIL=forge:NIBSS_EMAIL="${NIBSS_EMAIL_STAGE}":g' Backend/.env
        
      - run:
          name: ssh login
          command: |
            rsync --delete -va -e 'ssh -p 7822 -o StrictHostKeyChecking=no'   Backend/app Backend/database Backend/phpunit.xml Backend/storage Backend/vendor Backend/artisan Backend/.env Backend/tests Backend/bootstrap Backend/composer.json Backend/resources Backend/composer.lock Backend/routes Backend/config Backend/package.json Backend/public/ Backend/public skillz@103.72.76.68:revenuehub/api
      - run:
          name: ssh and effect migration
          command: |
            ssh -p 7822 -t skillz@103.72.76.68 "cd revenuehub/api && php artisan migrate && php artisan l5-swagger:generate"

  deploy-backend-production:
    docker:
      - image: cimg/php:8.3
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:XM+2xRjrCCSH/Frn3FMhEbTaB4RS9hNa9Wm54+iINww"
      - checkout
      # install dependencies
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: rename .env.example file to .env
          command: |
            mv Backend/.env.example Backend/.env

      - run:
          name: Install dependencies
          command: cd Backend && CI=false composer clear-cache && CI=false  composer install &&  CI=false php artisan key:generate

      - run: sudo apt update
      - run: sudo apt-get install rsync
      # - run:
      #     name: Update known hosts
      #     command:  CI=false ssh-keyscan -H 103.72.76.68 >> ~/.ssh/known_hosts && cat ~/.ssh/known_hosts
      - run:
          name: find and replace in document
          command: |
            sed -i -e 's:/public/index.php:/index.php:g' Backend/public/index.php
            sed -i -e 's:/../vendor/autoload.php:/vendor/autoload.php:g' Backend/public/index.php
            sed -i -e 's:DB_DATABASE=forge:DB_DATABASE=revenuehub_database:g' Backend/.env
            sed -i -e 's:DB_USERNAME=forge:DB_USERNAME=revenuehub_database:g' Backend/.env
            sed -i -e 's:/../bootstrap/app.php:/bootstrap/app.php:g' Backend/public/index.php
            sed -i -e 's:DB_PASSWORD=forge:DB_PASSWORD="Ubuxa##99":g' Backend/.env
            sed -i -e "s:BVN=forge:BVN=${BVN}:g" Backend/.env
            sed -i -e "s:PUBLIC_KEY=forge:PUBLIC_KEY=${PUBLIC_KEY}:g" Backend/.env
            sed -i -e "s:SECRET_KEY=forge:SECRET_KEY=${SECRET_KEY}:g" Backend/.env
            sed -i -e "s:ENCRYPTION_KEY=forge:ENCRYPTION_KEY=${ENCRYPTION_KEY}:g" Backend/.env
            sed -i -e "s:MAILERSEND_API_KEY=forge:MAILERSEND_API_KEY=${MAILERSEND_API_KEY}:g" Backend/.env
            sed -i -e 's:MAIL_USERNAME=forge:MAIL_USERNAME="${MAIL_USERNAME_PROD}":g' Backend/.env
            sed -i -e 's:MAIL_PASSWORD=forge:MAIL_PASSWORD="${MAIL_PASSWORD_PROD}":g' Backend/.env
            sed -i -e "s:MAIL_HOST=forge:MAIL_HOST=${MAIL_HOST_PROD}:g" Backend/.env
            sed -i -e 's:NIBSS_EMAIL=forge:NIBSS_EMAIL="${NIBSS_EMAIL_PROD}":g' Backend/.env

      - run:
          name: ssh login
          command: |
            rsync --delete -va -e 'ssh -p 7822 -o StrictHostKeyChecking=no'   Backend/app Backend/database Backend/phpunit.xml Backend/storage Backend/vendor Backend/artisan Backend/.env Backend/tests Backend/bootstrap Backend/composer.json Backend/resources Backend/composer.lock Backend/routes Backend/config Backend/package.json Backend/public/ Backend/public revenuehub@103.72.76.68:api
      - run:
          name: ssh and effect migration
          command: |
            ssh -p 7822 -t revenuehub@103.72.76.68 "cd api && php artisan migrate && php artisan l5-swagger:generate"
  deploy-frontend-production:
    docker:
      - image: circleci/node:16
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:XM+2xRjrCCSH/Frn3FMhEbTaB4RS9hNa9Wm54+iINww"
      - checkout
      # install dependencies
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: Run npm
          command: |
            cd Frontend && npm install

      - run: CI=false sudo apt update
      - run: CI=false sudo apt-get install rsync

      - run:
          name: rename .env.example file to .env 
          command: |
            cd Frontend &&  mv .env.example .env
      - run:
          name: find and replace in document
          command: |
            cd Frontend && sed -i -e 's|VITE_API_URL=url|VITE_API_URL=https://api.revenuehub.ng|g' .env

      - run:
          name: Update known hosts
          command: ssh-keyscan -H 103.72.76.68 >> ~/.ssh/known_hosts && cat ~/.ssh/known_hosts
      - run:
          name: build file
          command: |
            cd Frontend && CI=false npm run build

      - run:
          name: ssh login
          command: |
            rsync -va -e 'ssh -p 7822 -o StrictHostKeyChecking=no'  --delete   Frontend/dist/ Frontend/.htaccess  revenuehub@103.72.76.68:www

workflows:
  version: 2
  revenue_hub_deploy:
    jobs:
      - deploy-backend-test
      - deploy-frontend-staging: # Use the pre-configured job, deploy-via-git
          filters:
            branches:
              only: staging
      - deploy-backend-staging: # Use the pre-configured job, deploy-via-git
          requires:
            - deploy-backend-test
          filters:
            branches:
              only: staging

      - deploy-backend-production: # Use the pre-configured job, deploy-via-git
          filters:
            branches:
              only: main
      - deploy-frontend-production: # Use the pre-configured job, deploy-via-git
          filters:
            branches:
              only: main

      # - deploy-nest: # Use the pre-configured job, deploy-via-git
      #     filters:
      #       branches:
      #         only: nest
