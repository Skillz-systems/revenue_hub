{
    "openapi": "3.0.0",
    "info": {
        "title": "REVENUE HUB",
        "description": "Below is the API endpoint for the Revenue Hub",
        "contact": {
            "email": "darius@matulionis.lt"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0",
        "x-logo": {
            "url": "https://via.placeholder.com/190x90.png?text=L5-Swagger"
        }
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Staff Login",
                "description": "This allow the staff to login to there account.",
                "operationId": "loginStaff",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Enter staff email",
                                        "type": "text",
                                        "example": "admin@revenuehub.com"
                                    },
                                    "password": {
                                        "description": "Enter staff password",
                                        "type": "password",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Register Successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 9
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "abc@example2.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "65728338352"
                                                },
                                                "zone": {
                                                    "type": "string",
                                                    "example": "nigeria"
                                                },
                                                "role": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-01T20:44:43.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-01T20:44:43.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|57653vtZoT9EW2iRBHShQyALGaeZ3PtrtPhUN6Arlpgc4fe5fe8"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "All Fields are Required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ensure that all required filed are properly filled"
                                        },
                                        "data": {
                                            "properties": {
                                                "email": {
                                                    "type": "string",
                                                    "example": "email is required"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "password is required"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Credential not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Credential not match"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/store-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Staff Create Password",
                "description": "This allow the staff to create new password to  login to there account",
                "operationId": "createStaffPassword",
                "parameters": [
                    {
                        "name": "user",
                        "in": "query",
                        "description": "staff id",
                        "required": false,
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "staff password token send to the email",
                        "required": false,
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Enter new password",
                        "required": false,
                        "schema": {
                            "type": "password"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "Confirm password",
                        "required": false,
                        "schema": {
                            "type": "password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password Created Successfull",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password Created Successfull"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid Token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Password Token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send a password reset email",
                "description": "Sends a password reset email to the user with the provided email address.",
                "operationId": "cff9b52a898f73f39d684747bd69c4e1",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email address",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password Reset Email Sent Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password Reset Email Sent Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error or Something Went Wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All fields are required or Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/demand-notice": {
            "post": {
                "tags": [
                    "Demand Notice"
                ],
                "summary": "Get paginated list of demand notices",
                "operationId": "f46958ad8462f5306e359bb221c49bde",
                "parameters": [
                    {
                        "name": "date_filter",
                        "in": "query",
                        "description": "Optional. The year for which to retrieve data. Defaults to the current year if not provided.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "headers": {
                            "X-Pagination-Total-Count": {
                                "description": "Total count of demand notices",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-Page-Count": {
                                "description": "Total count of pages",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-Per-Page": {
                                "description": "Demand notices per page",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-Current-Page": {
                                "description": "Current page number",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-Next-Page": {
                                "description": "Next page number",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-Prev-Page": {
                                "description": "Previous page number",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-From": {
                                "description": "Starting item number of the current page (starts at 1)",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-To": {
                                "description": "Ending item number of the current page",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-Last-Page": {
                                "description": "Last page number",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DemandNoticeResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/demand-notice/create": {
            "post": {
                "tags": [
                    "Demand Notice"
                ],
                "summary": "Create a new demand notice",
                "operationId": "b1395ff45578aad070c11a5930fbac71",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "property_id": {
                                        "description": "ID of the property associated with the demand notice",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DemandNoticeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property ID is missing"
                                        },
                                        "data": {
                                            "properties": {
                                                "property_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/demand-notice/view/{demandNoticeId}": {
            "get": {
                "tags": [
                    "Demand Notice"
                ],
                "summary": "Get a specific demand notice",
                "operationId": "c91913bb0584070e612e5bb441168f29",
                "parameters": [
                    {
                        "name": "demandNoticeId",
                        "in": "path",
                        "description": "ID of the demand notice to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DemandNoticeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Demand notice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Demand notice not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/demand-notice/update/{demandNoticeId}": {
            "put": {
                "tags": [
                    "Demand Notice"
                ],
                "summary": "Update a specific demand notice",
                "operationId": "b4a311e38fe34d0477c4792481ffed41",
                "parameters": [
                    {
                        "name": "demandNoticeId",
                        "in": "path",
                        "description": "ID of the demand notice to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "property_id": {
                                        "description": "ID of the property associated with the demand notice",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "amount": {
                                        "description": "Amount of the demand notice",
                                        "type": "string",
                                        "example": "100.00"
                                    },
                                    "arrears_amount": {
                                        "description": "Arrears amount of the demand notice",
                                        "type": "string",
                                        "example": "50.00"
                                    },
                                    "penalty": {
                                        "description": "Penalty of the demand notice",
                                        "type": "string",
                                        "example": "10.00"
                                    },
                                    "status": {
                                        "description": "Status of the demand notice",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data has been updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "data": {
                                            "properties": {
                                                "property_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "amount": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "arrears_amount": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "penalty": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/demand-notice/delete/{demandNoticeId}": {
            "delete": {
                "tags": [
                    "Demand Notice"
                ],
                "summary": "Delete a specific demand notice",
                "operationId": "2493d2c8b46d7e1a71d393472082fe8b",
                "parameters": [
                    {
                        "name": "demandNoticeId",
                        "in": "path",
                        "description": "ID of the demand notice to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Demand notice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Demand notice not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payment": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get a list of payments",
                "operationId": "a863ba1461fb836d1d0f91cd9ed80905",
                "parameters": [
                    {
                        "name": "date_filter",
                        "in": "query",
                        "description": "Optional. The year for which to retrieve data. Defaults to the current year if not provided.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "headers": {
                            "X-Pagination-Current-Page": {
                                "description": "Current page of the collection",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-Per-Page": {
                                "description": "Number of items per page",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-Total": {
                                "description": "Total number of items",
                                "schema": {
                                    "type": "integer"
                                }
                            },
                            "X-Pagination-Last-Page": {
                                "description": "Number of the last page",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payment/view/{paymentId}": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get a specific payment",
                "operationId": "b5324253dc295d8105c4a3f1190bf0a4",
                "parameters": [
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "ID of the payment to view",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payments/generate-account/{propertyPID}/": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Generate an account number for a demand notice  ",
                "operationId": "ad052bf4803fee5d18d8d6c975c95887",
                "parameters": [
                    {
                        "name": "propertyPID",
                        "in": "path",
                        "description": "PID of the property to generate an account number for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "response_message": {
                                                    "type": "string",
                                                    "example": "Transaction in progress"
                                                },
                                                "response_code": {
                                                    "type": "string",
                                                    "example": "02"
                                                },
                                                "flw_ref": {
                                                    "type": "string",
                                                    "example": "GPCY5711171682908639919735"
                                                },
                                                "order_ref": {
                                                    "type": "string",
                                                    "example": "URF_1716829079964_1906235"
                                                },
                                                "frequency": {
                                                    "type": "string",
                                                    "example": "NA"
                                                },
                                                "bank_name": {
                                                    "type": "string",
                                                    "example": "Sterling Bank"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-05-27 17:58:06"
                                                },
                                                "expiry_date": {
                                                    "type": "string",
                                                    "example": "2024-05-27 18:58:06"
                                                },
                                                "note": {
                                                    "type": "string",
                                                    "example": "Please make a bank transfer to ICT FLW"
                                                },
                                                "amount": {
                                                    "type": "string",
                                                    "example": "48625.00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/property": {
            "post": {
                "tags": [
                    "Property"
                ],
                "summary": "Get all properties",
                "operationId": "eda93cd39cb8d8a5500d511b06d10b85",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No properties found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "string"
                                        },
                                        "message": {
                                            "description": "Message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/property/create": {
            "post": {
                "tags": [
                    "Property"
                ],
                "summary": "Add New Property Details",
                "description": "This allow staff admin to add new property details",
                "operationId": "addProperty",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "pid": {
                                                "type": "integer"
                                            },
                                            "prop_addr": {
                                                "type": "string"
                                            },
                                            "street_name": {
                                                "type": "string"
                                            },
                                            "asset_no": {
                                                "type": "string"
                                            },
                                            "cadastral_zone": {
                                                "type": "string"
                                            },
                                            "prop_type": {
                                                "type": "string"
                                            },
                                            "prop_use": {
                                                "type": "string"
                                            },
                                            "rating_dist": {
                                                "type": "string"
                                            },
                                            "annual_value": {
                                                "type": "string"
                                            },
                                            "rate_payable": {
                                                "type": "integer"
                                            },
                                            "arrears": {
                                                "type": "integer"
                                            },
                                            "penalty": {
                                                "type": "integer"
                                            },
                                            "grand_total": {
                                                "type": "integer"
                                            },
                                            "category": {
                                                "type": "string"
                                            },
                                            "group": {
                                                "type": "string"
                                            },
                                            "active": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "pid": "integer",
                                    "prop_addr": "string",
                                    "street_name": "string",
                                    "asset_no": "string",
                                    "cadastral_zone": "string",
                                    "prop_type": "string",
                                    "prop_use": "string",
                                    "rating_dist": "string",
                                    "annual_value": "integer",
                                    "rate_payable": "integer",
                                    "grand_total": "integer",
                                    "category": "string",
                                    "group": "string",
                                    "active": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/property/{property}": {
            "get": {
                "tags": [
                    "Property"
                ],
                "summary": "Get a property",
                "description": "Show details of a property",
                "operationId": "getProperty",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show details of a property",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Property found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Property"
                ],
                "summary": "Update Property Details",
                "description": "This allow staff admin to update property details",
                "operationId": "updateProperty",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "prop_addr": {
                                                "type": "string"
                                            },
                                            "street_name": {
                                                "type": "string"
                                            },
                                            "asset_no": {
                                                "type": "string"
                                            },
                                            "cadastral_zone": {
                                                "type": "string"
                                            },
                                            "prop_type": {
                                                "type": "string"
                                            },
                                            "prop_use": {
                                                "type": "string"
                                            },
                                            "rating_dist": {
                                                "type": "string"
                                            },
                                            "annual_value": {
                                                "type": "string"
                                            },
                                            "rate_payable": {
                                                "type": "integer"
                                            },
                                            "grand_total": {
                                                "type": "integer"
                                            },
                                            "category": {
                                                "type": "string"
                                            },
                                            "group": {
                                                "type": "string"
                                            },
                                            "active": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "prop_addr": "string",
                                    "street_name": "string",
                                    "asset_no": "string",
                                    "cadastral_zone": "string",
                                    "prop_type": "string",
                                    "prop_use": "string",
                                    "rating_dist": "string",
                                    "annual_value": "integer",
                                    "rate_payable": "integer",
                                    "grand_total": "integer",
                                    "category": "string",
                                    "group": "string",
                                    "active": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property Updated Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "All Fields are Required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All Fields are required"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "An error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Property"
                ],
                "summary": "Delete a property",
                "description": "This allow staff admin to delete property",
                "operationId": "deleteProperty",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You dont Have Permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You dont Have Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "An error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/statistic/all-yearly-data": {
            "post": {
                "tags": [
                    "statistics"
                ],
                "summary": "Retrieve all yearly statistical  data",
                "description": "Returns various statistics and totals for a specific year, including total payments, demand notices, properties, and users.",
                "operationId": "2d5125fb174949f725c2a491d4d5ecea",
                "parameters": [
                    {
                        "name": "date_filter",
                        "in": "query",
                        "description": "Optional. The year for which to retrieve data. Defaults to the current year if not provided.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_payments": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_demand_notices": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "total_paid_demand_notices": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total_pending_demand_notices": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_demand_notices_amount": {
                                                    "type": "number",
                                                    "example": 5000.5
                                                },
                                                "total_properties": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Missing or invalid token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/street": {
            "get": {
                "tags": [
                    "Street"
                ],
                "summary": "Get the list of street",
                "operationId": "daa959892093153f2b3a9b9dc25620fc",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreetResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You dont Have Permission."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/street/create": {
            "post": {
                "tags": [
                    "Street"
                ],
                "summary": "Add new street",
                "operationId": "a43a3571aed72648b57b5fca36da9621",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the street.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cadastral_zone_id",
                        "in": "query",
                        "description": "ID of the Cadastral Zone.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreetResource"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All fields are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You dont Have Permission."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/street/view/{street}": {
            "get": {
                "tags": [
                    "Street"
                ],
                "summary": "Get a specific street",
                "operationId": "9cb61a882038be595e14015ae4e6d12e",
                "parameters": [
                    {
                        "name": "street",
                        "in": "path",
                        "description": "The ID of the street to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You dont Have Permission."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No Street Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No Street Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/street/update/{street}": {
            "put": {
                "tags": [
                    "Street"
                ],
                "summary": "update street details",
                "operationId": "9949bd99e92beb2fee29aca4cc3f6c10",
                "parameters": [
                    {
                        "name": "street",
                        "in": "path",
                        "description": "The ID of the street to update.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the street",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "cadastral_zone_id": {
                                        "description": "ID of the Cadastral Zone",
                                        "type": "string",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Street updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All fields are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You dont Have Permission."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/street/delete/{street}": {
            "delete": {
                "tags": [
                    "Street"
                ],
                "summary": "Delete a specific street",
                "operationId": "4916cd5295cb34a172a6c68ad823bf0e",
                "parameters": [
                    {
                        "name": "street",
                        "in": "path",
                        "description": "The ID of the street to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Street deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You dont Have Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No Street Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No Street Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/staff": {
            "get": {
                "tags": [
                    "Staff"
                ],
                "summary": "Get all staffs",
                "description": "Show list of all staffs",
                "operationId": "getStaffs",
                "responses": {
                    "200": {
                        "description": "List of all staffs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StoreUserResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No User found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Register New Staff",
                "description": "This allow the MD to create new staff member",
                "operationId": "registerStaff",
                "requestBody": {
                    "description": "Input staff details to register",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone",
                                    "zone",
                                    "role_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Staff Fullname",
                                        "type": "text",
                                        "example": "Revenue Hub"
                                    },
                                    "email": {
                                        "description": "Staff Email",
                                        "type": "text",
                                        "example": ""
                                    },
                                    "phone": {
                                        "description": "Staff Phone",
                                        "type": "text",
                                        "example": ""
                                    },
                                    "zone": {
                                        "description": "Staff Zone",
                                        "type": "text",
                                        "example": ""
                                    },
                                    "role_id": {
                                        "description": "Staff Roles",
                                        "type": "integer",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registeration Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Register Successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 9
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "abc example2.com"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "abc@example2.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "65728338352"
                                                },
                                                "zone": {
                                                    "type": "string",
                                                    "example": "nigeria"
                                                },
                                                "role": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-01T20:44:43.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-01T20:44:43.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|57653vtZoT9EW2iRBHShQyALGaeZ3PtrtPhUN6Arlpgc4fe5fe8"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/staff/{staff}": {
            "get": {
                "tags": [
                    "Staff"
                ],
                "summary": "Get a staff",
                "description": "Show details of a staff",
                "operationId": "getStaff",
                "parameters": [
                    {
                        "name": "staff",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show details of a staff",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShowUserResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You dont Have Permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You dont Have Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Staff found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Staff"
                ],
                "summary": "Update Staff Details",
                "description": "This allow staff member to update their details",
                "operationId": "updateStaff",
                "parameters": [
                    {
                        "name": "staff",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "phone": {
                                                "type": "string"
                                            },
                                            "zone": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "example name",
                                    "email": "example email",
                                    "phone": "example phone",
                                    "zone": "example zone"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Update Successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 9
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "abc kel"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "abc@example2.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "65728338352"
                                                },
                                                "zone": {
                                                    "type": "string",
                                                    "example": "nigeria"
                                                },
                                                "role": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "All Fields are Required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All Fields are required"
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "name is required"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "email is required"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "phone is required"
                                                },
                                                "zone": {
                                                    "type": "string",
                                                    "example": "zone is required"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Credential error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Credential error: You are not authorize"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Staff"
                ],
                "summary": "Delete a staff",
                "description": "This allow staff admin to delete staff",
                "operationId": "deleteStaff",
                "parameters": [
                    {
                        "name": "staff",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Staff deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You don`t Have Permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You dont Have Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "An error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occured"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/user-with-token/{staff}": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Get User with Token",
                "description": "Fetches a user by their remember token and staff ID",
                "operationId": "getUserWithToken",
                "parameters": [
                    {
                        "name": "staff",
                        "in": "path",
                        "description": "ID of the staff",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "Remember token of the user",
                                        "type": "string",
                                        "example": "your_remember_token_here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/StoreUserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No Staff Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Staff Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You don't have permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update-staff-details/{staff}": {
            "put": {
                "tags": [
                    "Staff"
                ],
                "summary": "Update Staff Details",
                "description": "This allow staff member to update their details",
                "operationId": "updateStaffDetails",
                "parameters": [
                    {
                        "name": "staff",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "phone": {
                                                "type": "string"
                                            },
                                            "zone": {
                                                "type": "string"
                                            },
                                            "remember_token": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "example name",
                                    "email": "example email",
                                    "phone": "example phone",
                                    "zone": "example zone"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Update Successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 9
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "abc kel"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "abc@example2.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "65728338352"
                                                },
                                                "zone": {
                                                    "type": "string",
                                                    "example": "nigeria"
                                                },
                                                "role": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "All Fields are Required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All Fields are required"
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "name is required"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "email is required"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "phone is required"
                                                },
                                                "zone": {
                                                    "type": "string",
                                                    "example": "zone is required"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Credential error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Credential error: You are not authorize"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "DemandNoticePaymentResource": {
                "title": "DemandNoticePaymentResource",
                "description": "The payment resource",
                "properties": {
                    "tx_ref": {
                        "description": "The transaction reference",
                        "type": "string"
                    },
                    "pin": {
                        "description": "The Flutterwave reference",
                        "type": "string"
                    },
                    "actual_amount": {
                        "description": "The actual amount",
                        "type": "number"
                    },
                    "charged_amount": {
                        "description": "The charged amount",
                        "type": "number"
                    },
                    "app_fee": {
                        "description": "The application fee",
                        "type": "number"
                    },
                    "merchant_fee": {
                        "description": "The merchant fee",
                        "type": "number"
                    },
                    "status": {
                        "description": "The payment status",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DemandNoticeResource": {
                "title": "DemandNoticeResource",
                "description": "Resource representing a demand notice",
                "properties": {
                    "id": {
                        "description": "The ID of the demand notice",
                        "type": "integer"
                    },
                    "payments": {
                        "description": "all the payments associated with the demand notice",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DemandNoticePaymentResource"
                        }
                    },
                    "amount": {
                        "description": "The amount of the demand notice",
                        "type": "string"
                    },
                    "arrears_amount": {
                        "description": "The arrears amount of the demand notice",
                        "type": "string"
                    },
                    "penalty": {
                        "description": "The penalty of the demand notice",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the demand notice",
                        "type": "integer"
                    },
                    "property": {
                        "$ref": "#/components/schemas/PropertyResource"
                    },
                    "date_created": {
                        "description": "The date when the demand notice was created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LoginResource": {
                "title": "Login Resource",
                "description": "A resource representing a successful login response",
                "properties": {
                    "status": {
                        "description": "The status of the login operation",
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "description": "The success message",
                        "type": "string",
                        "example": "Login Successfully"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "description": "The unique identifier of the user",
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "description": "The name of the user",
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "description": "The email address of the user",
                                "type": "string",
                                "format": "email",
                                "example": "user@example.com"
                            },
                            "phone": {
                                "description": "The phone number of the user",
                                "type": "string",
                                "example": "+1234567890"
                            },
                            "zone": {
                                "description": "The zone associated with the user",
                                "type": "string",
                                "example": "Zone A"
                            },
                            "role": {
                                "properties": {
                                    "id": {
                                        "description": "The unique identifier of the role",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "name": {
                                        "description": "The name of the role",
                                        "type": "string",
                                        "example": "Admin"
                                    }
                                },
                                "type": "object"
                            },
                            "created_at": {
                                "description": "The creation timestamp of the user",
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-01-01T12:00:00Z"
                            },
                            "updated_at": {
                                "description": "The last update timestamp of the user",
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-01-02T12:00:00Z"
                            }
                        },
                        "type": "object"
                    },
                    "token": {
                        "description": "The JWT token for the authenticated user",
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                    }
                },
                "type": "object"
            },
            "PaymentResource": {
                "title": "PaymentResource",
                "description": "The payment resource",
                "properties": {
                    "tx_ref": {
                        "description": "The transaction reference",
                        "type": "string"
                    },
                    "pin": {
                        "description": "The Flutterwave reference",
                        "type": "string"
                    },
                    "demand_notice": {
                        "$ref": "#/components/schemas/DemandNoticeResource"
                    },
                    "actual_amount": {
                        "description": "The actual amount",
                        "type": "number"
                    },
                    "charged_amount": {
                        "description": "The charged amount",
                        "type": "number"
                    },
                    "app_fee": {
                        "description": "The application fee",
                        "type": "number"
                    },
                    "merchant_fee": {
                        "description": "The merchant fee",
                        "type": "number"
                    },
                    "status": {
                        "description": "The payment status",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PropertyResource": {
                "title": "Property Resource",
                "description": "A resource representing a property",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the property",
                        "type": "integer",
                        "example": 1
                    },
                    "pid": {
                        "description": "The property ID",
                        "type": "string",
                        "example": "P12345"
                    },
                    "occupant": {
                        "description": "The occupant of the property",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "prop_addr": {
                        "description": "The property address",
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "street_name": {
                        "description": "The street name",
                        "type": "string",
                        "example": "Main St"
                    },
                    "asset_no": {
                        "description": "The asset number",
                        "type": "string",
                        "example": "A123"
                    },
                    "cadastral_zone": {
                        "description": "The cadastral zone",
                        "type": "string",
                        "example": "Zone A"
                    },
                    "prop_type": {
                        "description": "The type of the property",
                        "type": "string",
                        "example": "Residential"
                    },
                    "prop_use": {
                        "description": "The usage of the property",
                        "type": "string",
                        "example": "Owner-Occupied"
                    },
                    "rating_dist": {
                        "description": "The rating district",
                        "type": "string",
                        "example": "Dist 1"
                    },
                    "annual_value": {
                        "description": "The annual value of the property",
                        "type": "number",
                        "format": "float",
                        "example": 1200.5
                    },
                    "rate_payable": {
                        "description": "The rate payable",
                        "type": "number",
                        "format": "float",
                        "example": 300.75
                    },
                    "grand_total": {
                        "description": "The grand total",
                        "type": "number",
                        "format": "float",
                        "example": 1500.25
                    },
                    "category": {
                        "description": "The category of the property",
                        "type": "string",
                        "example": "Category A"
                    },
                    "group": {
                        "description": "The group of the property",
                        "type": "string",
                        "example": "Group 1"
                    },
                    "active": {
                        "description": "The active status of the property",
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "description": "The creation timestamp of the property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "The last update timestamp of the property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-02T12:00:00Z"
                    },
                    "demand_notice": {
                        "description": "A collection of demand notices associated with the property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DemandNoticeResource"
                        }
                    },
                    "demand_notice_status": {
                        "description": "The status of the latest demand notice",
                        "type": "string",
                        "example": "Paid"
                    }
                },
                "type": "object"
            },
            "ShowUserResource": {
                "title": "Show Staff Resource",
                "description": "Show Staff Resource",
                "type": "object"
            },
            "StoreUserResource": {
                "title": "Store User Resource",
                "description": "Resource representation of a stored user",
                "properties": {
                    "id": {
                        "description": "ID of the user",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "description": "Phone number of the user",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "zone": {
                        "description": "Zone of the user",
                        "type": "string",
                        "example": "North Zone"
                    },
                    "role": {
                        "description": "Role of the user",
                        "type": "object"
                    },
                    "created_at": {
                        "description": "Timestamp when the user was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the user was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "StreetResource": {
                "title": "Street Resource",
                "description": "A resource representing a street",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the street",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The street name",
                        "type": "string",
                        "example": "Johnson Kay Steert"
                    },
                    "cadastral_zone_id": {
                        "description": "The cadastral zone id",
                        "type": "string",
                        "example": "2"
                    },
                    "created_at": {
                        "description": "The creation timestamp of the street",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "The last update timestamp of the street",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-02T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "Staff Model",
                "description": "Staff model",
                "type": "object"
            }
        },
        "responses": {
            "400": {
                "description": "All Fields are Required",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "error"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "All Fields are required"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "401": {
                "description": "An error occured",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "error"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "An error occured"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer token)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}